import requests
import math
import os
from datetime import datetime as dt
from current_weather import WeatherData


def get_current_weather(city: str) -> str | None:
    """
    –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è get –∑–∞–ø—Ä–æ—Å api open weather, —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π json –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç—Å—è –∏
    –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π –æ–±—ä–µ–∫—Ç–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã

    :param city: –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ-—Ä—É—Å—Å–∫–∏ –∏–ª–∏ –ø–æ-–∞–Ω–≥–∏–π—Å–∫–∏
    :return: —Ç–µ–∫—Å—Ç —Å –ø—Ä–æ–∑–Ω–æ–≥–æ–º –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ 200 –∏–ª–∏ None, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ != 200
    """
    api = (f"https://api.openweathermap.org/data/2.5/weather?"
           f"q={city}"
           f"&lang=ru"
           f"&units=metric"
           f"&appid={os.environ['OPEN_WEATHER_API_KEY']}")
    req = requests.get(api)  # get request

    if req.status_code == 200:
        request_data = req.json()  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ json
        current_weather = WeatherData(**request_data)  # –¥–µ—Å–µ—Ä–µ–∞–ª–∏–∑—É–µ–º json

        city = current_weather.get("name")
        temp = math.ceil(current_weather.main.get("temp"))
        humidity = current_weather.main.get("humidity")
        pressure = math.ceil((current_weather.main.get("pressure")) / 1.333)  # –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ –º–º.—Ä—Ç.—Å—Ç.
        feels_like = math.ceil(current_weather.main.get("feels_like"))
        temp_max = math.ceil(current_weather.main.get("temp_max"))
        temp_min = math.ceil(current_weather.main.get("temp_min"))
        timestamp_sunrise = dt.fromtimestamp(current_weather.sys.get("sunrise"))
        timestamp_sunset = dt.fromtimestamp(current_weather.sys.get("sunset"))
        sunrise = dt.time(timestamp_sunrise)  # –∏–∑ unix timestamp –ø–æ–ª—É—á–∞–µ–º HH:MM:SS
        sunset = dt.time(timestamp_sunset)  # –∏–∑ unix timestamp –ø–æ–ª—É—á–∞–µ–º HH:MM:SS
        day_len = timestamp_sunset - timestamp_sunrise  # –≤—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –¥–Ω—è HH:MM:SS
        wind_speed = current_weather.wind.get("speed")
        wind_gust = current_weather.wind.get("gust")
        weather = current_weather.weather[0].get("description")
        weather_capitalize = weather.capitalize()
        clouds = current_weather.clouds.get("all")

        total_weather = (f"‚òÄÔ∏è–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}: {weather_capitalize}\n\n"
                         f"‚òÅÔ∏è–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {clouds}%\n"
                         f"üå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp} C¬∞. –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like} C¬∞\n"
                         f"üìà–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_max} C¬∞\n"
                         f"üìâ–ú–∏–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_min} C¬∞\n"
                         f"üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                         f"üåÄ–î–∞–≤–ª–µ–Ω–∏–µ {pressure} –º–º.—Ä—Ç.—Å—Ç.\n"
                         f"üåÖ–í–æ—Å—Ö–æ–¥ –≤ {sunrise}\n"
                         f"üåÑ–ó–∞–∫–∞—Ç –≤ {sunset}\n"
                         f"‚è∞–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {day_len}\n\n"
                         f"üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {wind_speed} –º/—Å"
                         f"{f', –ø–æ—Ä—ã–≤—ã –¥–æ {wind_gust} –º/—Å' if wind_gust is not None else ''}")
        return total_weather
    else:
        return None
